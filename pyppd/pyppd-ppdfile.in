#!/usr/bin/env python

# lzma_proxy.py
@lzma_proxy@
# lzma_proxy.py

from optparse import OptionParser
from sys import argv
import base64
import sqlite3

def load():
    ppds_compressed = base64.b64decode(ppds_compressed_b64)
    ppds_decompressed = lzma.decompress(ppds_compressed)
    con = sqlite3.connect(":memory:")
    con.text_factory = str
    con.executescript(ppds_decompressed)
    return con

def list():
    binary_name = argv[0].replace('./', '')
    con = load()
    cur = con.cursor()
    cur.execute("SELECT description FROM ppds")
    for ppd in cur.fetchall():
        print ppd[0].replace('"', '"' + binary_name + ':', 1)

def cat(ppd):
    # Ignore driver's name, take only PPD's
    ppd = ppd.split(":")[1]

    con = load()
    cur = con.cursor()
    cur.execute("SELECT file FROM ppds WHERE name = ?", (ppd,))
    return cur.fetchone()[0]

def main():
    parser = OptionParser(usage="usage: %prog list\n"
                                "       %prog cat URI",
                          version="%prog 0.1.0\n"
                                  "Copyright (c) 2010 Vitor Baptista.\n"
                                  "This is free software; see the source for copying conditions."
                                  " There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.")
    (options, args) = parser.parse_args()

    if len(args) == 0 or len(args) > 2:
        parser.error("incorrect number of arguments")

    if args[0].lower() == 'list':
        list()
    elif args[0].lower() == 'cat':
        if not len(args) == 2:
            parser.error("incorrect number of arguments")
        ppd = cat(args[1])
        if not ppd:
            parser.error("Printer '%s' does not have default driver!" % args[1])
        print ppd
    else:
        parser.error("argument " + args[0] + " invalid")

# PPDs Archive
ppds_compressed_b64 = "@ppds_compressed_b64@"

main()
