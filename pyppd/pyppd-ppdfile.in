#!/usr/bin/env python

# lzma_proxy.py
@lzma_proxy@
# lzma_proxy.py

from optparse import OptionParser
from sys import argv
import base64
import cPickle
import tarfile
from cStringIO import StringIO

def load():
    ppds_compressed = base64.b64decode(ppds_compressed_b64)
    ppds = cPickle.loads(ppds_compressed)
    ppds['ARCHIVE'] = tarfile.open(fileobj=StringIO(lzma.decompress(ppds['ARCHIVE'])))
    return ppds

def list():
    binary_name = argv[0].replace('./', '')
    ppds = load()
    for ppd in ppds.values():
        if ppd.__class__ == tarfile.TarFile: continue
        print ppd[1].replace('"', '"' + binary_name + ':', 1)

def cat(ppd):
    # Ignore driver's name, take only PPD's
    ppd = ppd.split(":")[1]

    ppds = load()
    if ppds.has_key(ppd):
        tarinfo = ppds['ARCHIVE'].getmember(ppds[ppd][0])
        ppd = ppds['ARCHIVE'].extractfile(tarinfo)
        return ppd.read()

def main():
    usage = "usage: %prog list\n"
            "       %prog cat URI"
    version = "%prog 0.1.0\n"
              "Copyright (c) 2010 Vitor Baptista.\n"
              "This is free software; see the source for copying conditions."
              " There is NO warranty; not even for MERCHANTABILITY or \
                                        FITNESS FOR A PARTICULAR PURPOSE."
    parser = OptionParser(usage=usage
                          version=version)
    (options, args) = parser.parse_args()

    if len(args) == 0 or len(args) > 2:
        parser.error("incorrect number of arguments")

    if args[0].lower() == 'list':
        list()
    elif args[0].lower() == 'cat':
        if not len(args) == 2:
            parser.error("incorrect number of arguments")
        ppd = cat(args[1])
        if not ppd:
            parser.error("Printer '%s' does not have default driver!" % args[1])
        print ppd
    else:
        parser.error("argument " + args[0] + " invalid")

# PPDs Archive
ppds_compressed_b64 = "@ppds_compressed_b64@"

main()
